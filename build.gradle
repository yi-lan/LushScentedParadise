plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:-deprecation"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        client {
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'mixin.env.disableRefMap', 'true'
            args "--username","Royling"
        }
        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }
        data {
            workingDirectory project.file('run-data')
            property 'mixin.env.disableRefMap', 'true'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    maven {name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"}
    maven {name = "Jared's maven"
        url = "https://maven.blamejared.com/"}
    maven {name = "ModMaven"
        url = "https://modmaven.dev"}
    maven { url "https://maven.ryanliptak.com/" }
    maven {url "https://cursemaven.com"
    }
    maven {url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://maven.blamejared.com' }
    maven {url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly fg.deobf("squeek.appleskin:appleskin-forge:mc1.20.1-2.5.1:api")
    runtimeOnly fg.deobf("squeek.appleskin:appleskin-forge:mc1.20.1-2.5.1")
    implementation fg.deobf("curse.maven:jade-324717:6106101")

    implementation fg.deobf("curse.maven:food-effect-tooltips-forge-776426:5411412")
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:15.20.0.105")
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.20.0.105"))
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.20.0.105"))

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.12.1+1.20.1")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.12.1+1.20.1:api")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.20.1-84.1-FORGE:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.20.1-84.1-FORGE")

    compileOnly fg.deobf("vazkii.botania:Botania:1.20.1-447-FORGE:api")
    runtimeOnly fg.deobf("vazkii.botania:Botania:1.20.1-447-FORGE")
}


tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
